function [data_bounds, data_nd_bounded] = GetBounds(data_nd, feature_group)
    if ~exist('feature_group', 'var')
        feature_group = ones(1, size(data_nd, 2));
    end

    % Geting bounds to normalize distances generated by different features
    data_nd_bounded = data_nd;

    groups = unique(feature_group);
    group_num = length(groups);
    for i=1:group_num
        cur_group = find(feature_group==groups(i));
        FeaMat = data_nd(:, cur_group);
        minFea = min(FeaMat);
        maxFea = max(FeaMat);
        maxDist = maxFea - minFea;
        data_bounds(i) = sum(maxDist);
        if (data_bounds(i) ~= 0)
            data_nd_bounded(:, cur_group) = FeaMat / data_bounds(i);
        end
    end
end